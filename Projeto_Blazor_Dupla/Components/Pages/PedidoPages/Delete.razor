@page "/pedidos/delete"
@inject Projeto_Blazor_Dupla.Data.ApplicationDbContext DB
@using Projeto_Blazor_Dupla.Data
@inject NavigationManager NavigationManager
@using Microsoft.EntityFrameworkCore

<PageTitle>Delete</PageTitle>

<h1>Delete</h1>

<h3>Are you sure you want to delete this?</h3>
<div>
    <h4>Pedido</h4>
    <hr />
    @if (pedido is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">IdCliente</dt>
            <dd class="col-sm-10">@pedido.IdCliente</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">IdRemedio</dt>
            <dd class="col-sm-10">@pedido.IdRemedio</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">DtPedido</dt>
            <dd class="col-sm-10">@pedido.DtPedido</dd>
        </dl>
        <EditForm method="post" Model="pedido" OnValidSubmit="DeletePedido" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(pedido is null)">Delete</button> |
            <a href="/pedidos">Back to List</a>
        </EditForm>
    }
</div>

@code {
    Pedido? pedido;

    [SupplyParameterFromQuery]
    public int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        pedido = await DB.Pedidos.FirstOrDefaultAsync(m => m.Id == Id);

        if (pedido is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    public async Task DeletePedido()
    {
        DB.Pedidos.Remove(pedido!);
        await DB.SaveChangesAsync();
        NavigationManager.NavigateTo("/pedidos");
    }
}
