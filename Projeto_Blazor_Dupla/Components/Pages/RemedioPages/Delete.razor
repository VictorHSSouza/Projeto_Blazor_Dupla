@page "/remedios/delete"
@inject Projeto_Blazor_Dupla.Data.ApplicationDbContext DB
@using Projeto_Blazor_Dupla.Data
@inject NavigationManager NavigationManager
@using Microsoft.EntityFrameworkCore

<PageTitle>Delete</PageTitle>

<h1>Delete</h1>

<h3>Are you sure you want to delete this?</h3>
<div>
    <h4>Remedio</h4>
    <hr />
    @if (remedio is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">Nome</dt>
            <dd class="col-sm-10">@remedio.Nome</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Descricao</dt>
            <dd class="col-sm-10">@remedio.Descricao</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Valor</dt>
            <dd class="col-sm-10">@remedio.Valor</dd>
        </dl>
        <EditForm method="post" Model="remedio" OnValidSubmit="DeleteRemedio" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(remedio is null)">Delete</button> |
            <a href="/remedios">Back to List</a>
        </EditForm>
    }
</div>

@code {
    Remedio? remedio;

    [SupplyParameterFromQuery]
    public int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        remedio = await DB.Remedios.FirstOrDefaultAsync(m => m.Id == Id);

        if (remedio is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    public async Task DeleteRemedio()
    {
        DB.Remedios.Remove(remedio!);
        await DB.SaveChangesAsync();
        NavigationManager.NavigateTo("/remedios");
    }
}
